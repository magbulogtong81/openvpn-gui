/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package openvpn.gui;

import java.io.IOException;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeoutException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author jil
 */
public class App extends javax.swing.JFrame {

    ExecuteCommand exec;

    /**
     * Creates new form Main
     */
    public App() {
        initComponents();
        initSetup();
        osDetectLbl.setText(new ExecuteCommand().detecOS());
        sessionListTxt.setText(sessionList());

    }

    public void initSetup() {
        //sets the program to center
        setLocationRelativeTo(null);
        this.setResizable(false);
        this.setTitle("OpenVPN GUI");
    }

    public String sessionList() {
        String returnVal = null;
        exec = new ExecuteCommand();
        try {

            exec.executeCommand(exec.detectPath() + " sessions-list");
            returnVal = exec.getResult();

        } catch (IOException | InterruptedException | ExecutionException | TimeoutException ex) {
            Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
        }
        return returnVal;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rtsBtn = new javax.swing.JButton();
        osDetectLbl = new javax.swing.JLabel();
        detectLbl = new javax.swing.JLabel();
        configTxt = new javax.swing.JLabel();
        configTxtBox = new javax.swing.JTextField();
        configTxtBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        connectBtn = new javax.swing.JButton();
        disconnectBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        sessionListTxt = new javax.swing.JTextArea();
        reconnectBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(70, 73, 75));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rtsBtn.setBackground(new java.awt.Color(70, 73, 75));
        rtsBtn.setForeground(new java.awt.Color(255, 255, 255));
        rtsBtn.setText("Real-time stats");
        rtsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rtsBtnActionPerformed(evt);
            }
        });
        getContentPane().add(rtsBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 170, 130, 38));

        osDetectLbl.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        osDetectLbl.setForeground(new java.awt.Color(255, 255, 255));
        osDetectLbl.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        osDetectLbl.setText("Win? LInux?");
        getContentPane().add(osDetectLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 93, 30));

        detectLbl.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        detectLbl.setForeground(new java.awt.Color(255, 255, 255));
        detectLbl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        detectLbl.setText("OS Detected:");
        getContentPane().add(detectLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 93, 30));

        configTxt.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        configTxt.setForeground(new java.awt.Color(255, 255, 255));
        configTxt.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        configTxt.setText("Config File:");
        getContentPane().add(configTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 93, 30));

        configTxtBox.setBackground(new java.awt.Color(255, 255, 255));
        configTxtBox.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        configTxtBox.setForeground(new java.awt.Color(70, 73, 75));
        configTxtBox.setText("(Empty)");
        getContentPane().add(configTxtBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 465, 30));

        configTxtBtn.setBackground(new java.awt.Color(70, 73, 75));
        configTxtBtn.setFont(new java.awt.Font("Liberation Sans", 0, 14)); // NOI18N
        configTxtBtn.setForeground(new java.awt.Color(255, 255, 255));
        configTxtBtn.setText("Open File");
        configTxtBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configTxtBtnActionPerformed(evt);
            }
        });
        getContentPane().add(configTxtBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 120, -1, 30));

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("OpenVPN GUI");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 0, 288, 62));

        jLabel2.setFont(new java.awt.Font("DejaVu Sans", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("session list");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 218, -1, 31));

        connectBtn.setBackground(new java.awt.Color(70, 73, 75));
        connectBtn.setForeground(new java.awt.Color(255, 255, 255));
        connectBtn.setText("Connect");
        connectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectBtnActionPerformed(evt);
            }
        });
        getContentPane().add(connectBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 109, 38));

        disconnectBtn.setBackground(new java.awt.Color(70, 73, 75));
        disconnectBtn.setForeground(new java.awt.Color(255, 255, 255));
        disconnectBtn.setText("Disconnect");
        disconnectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disconnectBtnActionPerformed(evt);
            }
        });
        getContentPane().add(disconnectBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 109, 38));

        sessionListTxt.setEditable(false);
        sessionListTxt.setBackground(new java.awt.Color(70, 73, 75));
        sessionListTxt.setColumns(20);
        sessionListTxt.setForeground(new java.awt.Color(255, 255, 255));
        sessionListTxt.setLineWrap(true);
        sessionListTxt.setRows(5);
        sessionListTxt.setToolTipText("the logs/results of openvpn");
        jScrollPane2.setViewportView(sessionListTxt);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 670, 191));

        reconnectBtn.setBackground(new java.awt.Color(70, 73, 75));
        reconnectBtn.setForeground(new java.awt.Color(255, 255, 255));
        reconnectBtn.setText("Reconnect");
        reconnectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reconnectBtnActionPerformed(evt);
            }
        });
        getContentPane().add(reconnectBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 170, 109, 38));

        jLabel3.setBackground(new java.awt.Color(70, 73, 75));
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 690, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void configTxtBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_configTxtBtnActionPerformed
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        FileNameExtensionFilter restrict = new FileNameExtensionFilter("ovpn files only", "ovpn");
        file.addChoosableFileFilter(restrict);
        file.showOpenDialog(null);
        String path = file.getSelectedFile().toString();
        configTxtBox.setText(path);
    }//GEN-LAST:event_configTxtBtnActionPerformed

    private void connectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectBtnActionPerformed
        // TODO add your handling code here:
        if (configTxtBox.getText().equals("(Empty)")) {
            JOptionPane.showMessageDialog(null, "Please select a config file first");
        } else {
            exec = new ExecuteCommand();
            //test
            try {
                System.out.println("Selecting config: " + configTxtBox.getText());
                exec.executeCommand(exec.detectPath() + " session-start --config "
                        + configTxtBox.getText());
                String result = exec.getResult();
                System.out.println(result);
                ExecLog log = new ExecLog();
                log.setVisible(true);
                log.ExecLogTxt.setText(result);
                sessionListTxt.setText(this.sessionList());

            } catch (IOException | InterruptedException | ExecutionException | TimeoutException ex) {
                JOptionPane.showMessageDialog(null, "Error, " + ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_connectBtnActionPerformed

    private void disconnectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disconnectBtnActionPerformed
        // TODO add your handling code here: 
        if (sessionList().equals("No sessions available\n")) {
            JOptionPane.showMessageDialog(null, "Not connected yet", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else {
            exec = new ExecuteCommand();
            try {
                exec.executeCommand(exec.detectPath() + " session-manage --config "
                        + "$(openvpn3 sessions-list | grep -Eo \"/...*.ovpn\") --disconnect");
                String result = exec.getResult();
                ExecLog log = new ExecLog();
                log.setVisible(true);
                log.ExecLogTxt.setText(result);
                sessionListTxt.setText(sessionList());

            } catch (IOException | InterruptedException | ExecutionException | TimeoutException ex) {
                Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
            }

        }


    }//GEN-LAST:event_disconnectBtnActionPerformed

    private void reconnectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reconnectBtnActionPerformed
        // TODO add your handling code here:
        if (sessionList().equals("No sessions available\n")) {
            JOptionPane.showMessageDialog(null, "Not connected yet", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else {
            exec = new ExecuteCommand();
            try {
                exec.executeCommand(exec.detectPath() + " session-manage --config "
                        + "$(openvpn3 sessions-list | grep -Eo \"/...*.ovpn\") --restart");
                String result = exec.getResult();
                ExecLog log = new ExecLog();
                log.setVisible(true);
                log.ExecLogTxt.setText(result);
                sessionListTxt.setText(sessionList());

            } catch (IOException | InterruptedException | ExecutionException | TimeoutException ex) {
                Logger.getLogger(App.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_reconnectBtnActionPerformed

    private void rtsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rtsBtnActionPerformed
        // TODO add your handling code here:
        if (sessionList().equals("No sessions available\n")) {
            JOptionPane.showMessageDialog(null, "Not connected yet", "Info", JOptionPane.INFORMATION_MESSAGE);
        } else {
            ExecLog log = new ExecLog();
            ExecuteCommand exec = new ExecuteCommand();

            String command = exec.detectPath() + " session-stats --config $(openvpn3 sessions-list | grep -Eo \"/...*.ovpn\")";
            log.setloopExec(command);
            log.setVisible(true);
            Thread tt = new Thread(log);
            tt.start();
            if (!log.isDisplayable()) {
                tt.interrupt();
            }
        }
    }//GEN-LAST:event_rtsBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel configTxt;
    private javax.swing.JTextField configTxtBox;
    private javax.swing.JButton configTxtBtn;
    private javax.swing.JButton connectBtn;
    private javax.swing.JLabel detectLbl;
    private javax.swing.JButton disconnectBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel osDetectLbl;
    private javax.swing.JButton reconnectBtn;
    private javax.swing.JButton rtsBtn;
    public javax.swing.JTextArea sessionListTxt;
    // End of variables declaration//GEN-END:variables
}
