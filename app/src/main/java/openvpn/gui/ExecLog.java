/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package openvpn.gui;

import java.io.IOException;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeoutException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author jil
 */
public class ExecLog extends javax.swing.JFrame implements Runnable {

    String command = "";

    /**
     * Creates new form ExecLog
     */
    public ExecLog() {
        initComponents();
        setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ExecLogTxt = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("log message");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ExecLogTxt.setEditable(false);
        ExecLogTxt.setBackground(new java.awt.Color(70, 73, 75));
        ExecLogTxt.setColumns(20);
        ExecLogTxt.setForeground(new java.awt.Color(255, 255, 255));
        ExecLogTxt.setLineWrap(true);
        ExecLogTxt.setRows(5);
        ExecLogTxt.setToolTipText("the logs/results of openvpn");
        jScrollPane1.setViewportView(ExecLogTxt);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, 3, 490, 240));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExecLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExecLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExecLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExecLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExecLog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextArea ExecLogTxt;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    /**
     * set a command to loop through the thread of this JFrame. this is intended
     * only for session-stats, so it will ignore other commands
     *
     * @param command session-stats to pass to the thread
     */
    public void setloopExec(String command) {

        this.command = command;

    }

    @Override
    public void run() {
        while (true) {

            try {

                Thread.sleep(500);
                ExecuteCommand exec = new ExecuteCommand();

                exec.executeCommand(command);
                this.ExecLogTxt.setText(exec.getResult());
                if (!this.isDisplayable()) {
                    break;

                
            }
        }catch (InterruptedException | IOException | ExecutionException | TimeoutException ex) {
                    Logger.getLogger(ExecLog.class.getName()).log(Level.SEVERE, null, ex);
                }

    }
    }
}
